# Import des biblioth√®ques n√©cessaires
import hashlib
import requests
import re

# 1. Fonction pour afficher la banni√®re
def display_banner():
    banner = """
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó     
‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë     
‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     
‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù   ‚ïö‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù   ‚ïö‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     
‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë ‚ïö‚ïê‚ïù ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó
‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù    ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù                                            
for the security of everyone
"""
    print(banner)
    print("\nHey, je suis F3mF3tal.")
    print("Nous allons ensemble regarder si ton mot de passe est assez solide.\n")

# 2. V√©rifier la force du mot de passe
def check_password_strength(password: str) -> dict:
    score = 0
    feedback = []

    # V√©rifie la longueur du mot de passe
    if len(password) >= 8:
        score += 1
    else:
        feedback.append("Votre mot de passe doit contenir au moins 8 caract√®res.")

    # V√©rifie la pr√©sence de majuscules, minuscules, chiffres, caract√®res sp√©ciaux
    if re.search(r'[A-Z]', password):
        score += 1
    else:
        feedback.append("Ajoutez au moins une lettre majuscule.")

    if re.search(r'[a-z]', password):
        score += 1
    else:
        feedback.append("Ajoutez au moins une lettre minuscule.")

    if re.search(r'\d', password):
        score += 1
    else:
        feedback.append("Ajoutez au moins un chiffre.")

    if re.search(r'[!@#$%^&*(),.?":{}|<>]', password):
        score += 1
    else:
        feedback.append("Ajoutez au moins un caract√®re sp√©cial (!@#$...).")

    return {
        "score": score,
        "feedback": feedback
    }

# 3. G√©n√©rer des conseils
def generate_advice(score: int, feedback: list) -> str:
    if score == 5:
        return "‚úÖ Votre mot de passe est fort !"
    else:
        return "‚ö†Ô∏è Conseils pour am√©liorer votre mot de passe :\n" + "\n".join(feedback)

# 4. Le menu principal
def main():
    while True:
        print("\n=== Menu ===")
        print("1. V√©rifier un mot de passe")
        print("2. Quitter")
        choice = input("Choisissez une option : ")

        if choice == "1":
            password = input("Entrez un mot de passe pour l'√©valuer : ")

            # V√©rification de la force
            strength = check_password_strength(password)
            print(f"\nüîê Score de s√©curit√© : {strength['score']}/5")
            print(generate_advice(strength['score'], strength['feedback']))

        elif choice == "2":
            print("\nMerci d'avoir utilis√© F3mF3tal Security. √Ä bient√¥t !")
            break

        else:
            print("Option invalide. Veuillez r√©essayer.")

# 5. Point d'entr√©e du programme
if __name__ == "__main__":
    display_banner()
    main()